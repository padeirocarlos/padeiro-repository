<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename field &apos;originPermitida&apos; in &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty&apos; to &apos;originAllowed&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Original element: &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.originPermitida&apos;&#x0A;- Renamed element: &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.originAllowed&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;originPermitida&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src\/main\/java&lt;padeiro.exemplo.angular.config.proporty{PadeiroApiProperty.java[PadeiroApiProperty^originPermitida" name="originAllowed" references="true" setter="false" stamp="1550762201646" textual="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;application.properties&apos; to &apos;application.properties&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Destination element: &apos;application.properties&apos;&#x0A;- Original element: &apos;application.properties&apos;" description="Copy file" element1="src/main/resources/application.properties" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1550763469201" target="/demo.padeiro.angular/src/main/resources/application.properties" units="0" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;padeiro.exemplo.angular.token.RefreshTokenPostProcessor.padeiroApiProperty&apos; in &apos;padeiro.exemplo.angular.token.RefreshTokenPostProcessor&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Original element: &apos;padeiro.exemplo.angular.token.RefreshTokenPostProcessor.padeiroApiProperty&apos;&#x0A;- Getter method name: &apos;getPadeiroApiProperty&apos;&#x0A;- Setter method name: &apos;setPadeiroApiProperty&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;padeiroApiProperty&apos;" flags="589830" getter="getPadeiroApiProperty" id="org.eclipse.jdt.ui.self.encapsulate" input="/src\/main\/java&lt;padeiro.exemplo.angular.token{RefreshTokenPostProcessor.java[RefreshTokenPostProcessor^padeiroApiProperty" insertion="3" setter="setPadeiroApiProperty" stamp="1550843735713" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;padeiro.exemplo.angular.config.EAuthorizedAndAuthenticationConfig.padeiroApiProperty&apos; in &apos;padeiro.exemplo.angular.config.EAuthorizedAndAuthenticationConfig&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Original element: &apos;padeiro.exemplo.angular.config.EAuthorizedAndAuthenticationConfig.padeiroApiProperty&apos;&#x0A;- Getter method name: &apos;getPadeiroApiProperty&apos;&#x0A;- Setter method name: &apos;setPadeiroApiProperty&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;padeiroApiProperty&apos;" flags="589830" getter="getPadeiroApiProperty" id="org.eclipse.jdt.ui.self.encapsulate" input="/src\/main\/java&lt;padeiro.exemplo.angular.config{EAuthorizedAndAuthenticationConfig.java[EAuthorizedAndAuthenticationConfig^padeiroApiProperty" insertion="2" setter="setPadeiroApiProperty" stamp="1550843914587" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;padeiro.exemplo.angular.resource.logout.RevokeTokenResource.padeiroApiProperty&apos; in &apos;padeiro.exemplo.angular.resource.logout.RevokeTokenResource&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Original element: &apos;padeiro.exemplo.angular.resource.logout.RevokeTokenResource.padeiroApiProperty&apos;&#x0A;- Getter method name: &apos;getPadeiroApiProperty&apos;&#x0A;- Setter method name: &apos;setPadeiroApiProperty&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;padeiroApiProperty&apos;" flags="589830" getter="getPadeiroApiProperty" id="org.eclipse.jdt.ui.self.encapsulate" input="/src\/main\/java&lt;padeiro.exemplo.angular.resource.logout{RevokeTokenResource.java[RevokeTokenResource^padeiroApiProperty" insertion="0" setter="setPadeiroApiProperty" stamp="1550844351743" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Rename field &apos;enableHttps&apos; in &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.Security&apos; to &apos;enableHttpOnly&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Original element: &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.Security.enableHttps&apos;&#x0A;- Renamed element: &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.Security.enableHttpOnly&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;enableHttps&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src\/main\/java&lt;padeiro.exemplo.angular.config.proporty{PadeiroApiProperty.java[PadeiroApiProperty[Security!2^enableHttps" name="enableHttpOnly" references="true" setter="false" stamp="1550844549716" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.HttpOnly.enableHttpOnly&apos; in &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.HttpOnly&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Original element: &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.HttpOnly.enableHttpOnly&apos;&#x0A;- Getter method name: &apos;isEnableHttpOnly&apos;&#x0A;- Setter method name: &apos;setEnableHttpOnly&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;enableHttpOnly&apos;" flags="589830" getter="isEnableHttpOnly" id="org.eclipse.jdt.ui.self.encapsulate" input="/src\/main\/java&lt;padeiro.exemplo.angular.config.proporty{PadeiroApiProperty.java[PadeiroApiProperty[HttpOnly^enableHttpOnly" insertion="-1" setter="setEnableHttpOnly" stamp="1550844567098" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.httpOnly&apos; in &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty&apos;&#x0A;- Original project: &apos;demo.padeiro.angular&apos;&#x0A;- Original element: &apos;padeiro.exemplo.angular.config.proporty.PadeiroApiProperty.httpOnly&apos;&#x0A;- Getter method name: &apos;getHttpOnly&apos;&#x0A;- Setter method name: &apos;setHttpOnly&apos;&#x0A;- Field visibility: &apos;public&apos;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;httpOnly&apos;" flags="589830" getter="getHttpOnly" id="org.eclipse.jdt.ui.self.encapsulate" input="/src\/main\/java&lt;padeiro.exemplo.angular.config.proporty{PadeiroApiProperty.java[PadeiroApiProperty^httpOnly" insertion="2" setter="setHttpOnly" stamp="1550844603216" version="1.0" visibility="1"/>
</session>