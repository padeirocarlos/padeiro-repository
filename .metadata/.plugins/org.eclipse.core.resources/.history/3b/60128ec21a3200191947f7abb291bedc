package padeiro.exemplo.angular.repository.operation;

import java.time.LocalDate;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Service;

import padeiro.exemplo.angular.model.operation.OperationEntity;
import padeiro.exemplo.angular.model.operation.OperationEnum;
import padeiro.exemplo.angular.utils.StringUtils;

@Service
public class OperationRepositoryImpl implements OperationRepositoryQuery {

	@PersistenceContext
	private EntityManager entityManager;

	public List<OperationEntity> findOperationByDescriptionAndDate(final LocalDate validatyDate,
			final String description) {

		TypedQuery<OperationEntity> query = this.getEntityManager()
				.createQuery(OperationRepositoryQuery.findOperationByDescriptionAndDate, OperationEntity.class);
		query.setParameter("pdescription", StringUtils.lowerCaseAndConact(description));
		query.setParameter("pvalidatyDate", validatyDate);
		// query.setParameter("pactive", IObjectActiveState.ACTIVED);

		return query.getResultList();
	}

	public List<OperationEntity> findOperationByDescriptionAndOperationType(final OperationEnum operationType,
			final String description) {
		TypedQuery<OperationEntity> query = this.getEntityManager().createQuery(
				OperationRepositoryQuery.findOperationByDescriptionAndOperationType, OperationEntity.class);
		query.setParameter("pdescription", StringUtils.lowerCaseAndConact(description));
		query.setParameter("poperationType", operationType.OUTGOING);
		// query.setParameter("pactive", IObjectActiveState.ACTIVED);
		return query.getResultList();

	}

	public List<OperationEntity> findOperationByDescriptionAndOperationType(final String operationType,
			final String description) {
		TypedQuery<OperationEntity> query = this.getEntityManager().createQuery(
				OperationRepositoryQuery.findOperationByDescriptionAndOperationType, OperationEntity.class);
		query.setParameter("pdescription", StringUtils.lowerCaseAndConact(description));
		query.setParameter("poperationType", operationType);
		// query.setParameter("pactive", IObjectActiveState.ACTIVED);
		return query.getResultList();

	}

	@Override
	public List<OperationEntity> findProjectionOperationByDescriptionAndDate(LocalDate validatyDate,
			String description) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<OperationEntity> findProjectionOperationByDescriptionAndOperationType(OperationEnum operationType,
			String description) {
		// TODO Auto-generated method stub
		return null;
	}

	public EntityManager getEntityManager() {
		return this.entityManager;
	}

	public void setEntityManager(final EntityManager entityManager) {
		this.entityManager = entityManager;
	}

}
